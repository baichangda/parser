buildscript {
    ext {
        aliyunPublic = 'https://maven.aliyun.com/repository/public'
    }

    repositories {
        mavenLocal()
        maven { url "${aliyunPublic}" }
        mavenCentral()
    }
}

plugins {
    id 'java-library'
    id 'java'
    id 'idea'
    id "com.vanniktech.maven.publish" version "0.29.0"
}

group 'cn.bcd'
version '1.0'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

repositories {
    mavenLocal()
//    maven { url "${aliyunPublic}" }
    mavenCentral()
}

//下载源码和文档
//gradle cleanIdea idea
idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}

dependencies {
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.13'
    // https://mvnrepository.com/artifact/com.google.guava/guava
    implementation group: 'com.google.guava', name: 'guava', version: "33.2.1-jre"
    // https://mvnrepository.com/artifact/io.netty/netty-all
    implementation group: 'io.netty', name: 'netty-buffer', version: "4.1.111.Final"

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: "2.17.2"
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: "2.17.2"
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: "2.17.2"

    // https://mvnrepository.com/artifact/org.javassist/javassist
    implementation group: 'org.javassist', name: 'javassist', version: "3.30.2-GA"

    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-engine
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.11.0-M2'

    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-slf4j2-impl
    testImplementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j2-impl', version: '2.23.1'
}

//生成jar时打包源码
tasks.register('sourceJar', Jar) {
    from sourceSets.main.java.srcDirs
    archiveClassifier = "sources"
}

test {
    useJUnitPlatform()
}
